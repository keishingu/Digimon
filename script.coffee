# HTML内のcanvas要素を取得し、描画対象にする
canvas = document.getElementById 'sample'
ctx = canvas.getContext '2d'

# ドットを描く初期位置
baseX = 0
baseY = 0

# デジタマを表すクラス
# すべてのモンスターはデジタマを継承する
class Digitama
	constructor: ->
		@name = "digitama"
		# 待機状態のドットを２次元配列で宣言し、数フレーム用意する
		@waitingDots = [
				[
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0]
					[0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0]
					[0,0,0,0,1,0,1,0,1,1,0,1,0,0,0,0]
					[0,0,0,1,0,1,1,0,0,1,0,0,1,0,0,0]
					[0,0,0,1,0,1,0,0,0,1,1,0,1,0,0,0]
					[0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0]
					[0,0,1,0,1,1,0,0,1,0,1,1,0,1,0,0]
					[0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0]
					[0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0]
					[0,0,0,1,1,0,0,1,0,0,1,1,1,0,0,0]
					[0,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0]
					[0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0]
				],
				[
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0]
					[0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0]
					[0,0,0,0,0,1,0,1,0,1,1,0,1,0,0,0]
					[0,0,0,0,1,0,1,1,0,0,1,0,0,1,0,0]
					[0,0,0,0,1,0,1,0,0,0,1,1,0,1,0,0]
					[0,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0]
					[0,0,0,1,0,1,1,0,0,1,0,1,1,0,1,0]
					[0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0]
					[0,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0]
					[0,0,0,0,1,1,0,0,1,0,0,1,1,1,0,0]
					[0,0,0,0,0,1,1,1,1,0,0,1,1,0,0,0]
					[0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0]
				]
			] 
	
	# 空腹度、体力の初期値
	hungry = 4
	vitality = 4
	
	# ドットを描く関数
	drawing = (dots) ->
		ctx.clearRect baseX, baseY, 175, 175
		x = baseX
		y = baseY
		for i in [0...16]
			for j in [0...16]
				ctx.fillRect x, y, 10, 10 if dots[i][j] is 1
				x += 11
			x = baseX
			y += 11
	
	# 待機状態
	wait: ->
		frame = 1
		setInterval do (@waitingDots) ->
			-> drawing @waitingDots[frame%2]; frame++
		, 1000

class Zurumon extends Digitama
	constructor: ->
		@name = "zurumon"
		@waitingDots = [
				[
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0]
					[0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0]
					[0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0]
					[0,0,0,0,0,1,1,0,1,1,1,1,0,0,0,0]
					[0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0]
				]
				[
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
					[0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0]
					[0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0]
					[0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0]
					[0,0,0,0,1,1,0,1,1,1,1,0,0,0,0,0]
					[0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0]
				]
			] 

# モンスターを作る
monster = new Digitama
# 待機状態にする
monster.wait()

# 一定時間が経ったら進化する
setTimeout ->
	monster = new Zurumon
	monster.wait()
, 4950