// Generated by CoffeeScript 1.6.3
(function() {
  var Digitama, SuperMonster, baseX, baseY, canvas, ctx, meet, monster, util,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  canvas = document.getElementById('sample');

  ctx = canvas.getContext('2d');

  baseX = 0;

  baseY = 0;

  util = {};

  util.clearDot = function() {
    return ctx.clearRect(0, 0, 1000, 1000);
  };

  util.drawDot = function(dots, start_x, start_y) {
    var i, j, len, x, y, _i, _j, _results;
    console.log(dots);
    len = dots.length;
    x = start_x;
    y = start_y;
    _results = [];
    for (i = _i = 0; 0 <= len ? _i < len : _i > len; i = 0 <= len ? ++_i : --_i) {
      for (j = _j = 0; 0 <= len ? _j < len : _j > len; j = 0 <= len ? ++_j : --_j) {
        if (dots[i][j] === 1) {
          ctx.fillRect(x, y, 10, 10);
        }
        x += 11;
      }
      x = baseX;
      _results.push(y += 11);
    }
    return _results;
  };

  meet = [[[0, 1, 1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0]], [[0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0]], [[0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0]]];

  SuperMonster = (function() {
    function SuperMonster() {
      this.name = "zurumon";
      this.waitingDots = [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]]];
    }

    SuperMonster.prototype.shout = function(name) {
      return alert(name);
    };

    SuperMonster.prototype.wait = function() {
      var f,
        _this = this;
      f = 0;
      return setInterval(function() {
        util.clearDot();
        util.drawDot(_this.waitingDots[f % 2], 0, 0);
        return f += 1;
      }, 1000);
    };

    SuperMonster.prototype.eat = function() {
      var f;
      f = 0;
      return setInterval(function() {
        util.clearDot;
        util.drawDot(meet[f % 3], 0, 0);
        util.drawDot(this.eatingDots[f % 3], 20, 0);
        return f += 1;
      }, 1000);
    };

    return SuperMonster;

  })();

  Digitama = (function(_super) {
    __extends(Digitama, _super);

    function Digitama() {
      this.name = "digitama";
      this.waitingDots = [[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]]];
    }

    return Digitama;

  })(SuperMonster);

  /*
  class Zurumon extends Digitama
  	constructor: ->
  		@name = "zurumon"
  		@waitingDots = [
  				[
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0]
  					[0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0]
  					[0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0]
  					[0,0,0,0,0,1,1,0,1,1,1,1,0,0,0,0]
  					[0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0]
  				]
  				[
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0]
  					[0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0]
  					[0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0]
  					[0,0,0,0,1,1,0,1,1,1,1,0,0,0,0,0]
  					[0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0]
  				]
  			] 
  		@eatingDots = [
  				[
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0]
  					[0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0]
  					[0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0]
  					[0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0]
  					[0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0]
  					[0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0]
  					[0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,0]
  					[0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0]
  				]
  				[
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  					[0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0]
  					[0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0]
  					[0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0]
  					[0,0,0,0,1,1,0,1,1,1,1,0,0,0,0,0]
  					[0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0]
  				]
  			]
  */


  monster = new Digitama;

  monster.wait();

  /*
  
  # 空腹度、体力の初期値
  hungry = 4
  vitality = 4
  
  # 待機状態にする
  seen = "wait";
  
  # ドットを描く関数
  drawing = (dots) ->
  	len = dots.length
  	ctx.clearRect baseX, baseY, (10+1)*len, (10+1)*len
  	x = baseX
  	y = baseY
  	for i in [0...len]
  		for j in [0...len]
  			ctx.fillRect x, y, 10, 10 if dots[i][j] is 1
  			x += 11
  		x = baseX
  		y += 11
  
  
  # モンスターを作る
  monster = new Digitama
  
  btnA = document.getElementById 'buttonA'
  btnA.onclick = ->
  	if monster.eatingDots
  		ctx.clearRect 0, 0, 200, 200
  		seen = "eat";
  	
  frame = 0;
  setInterval ->
  	switch seen
  		when "wait"
  			baseX = 0
  			baseY = 0
  			drawing monster.waitingDots[frame%2]
  		when "eat"
  			baseX = 0
  			baseY = 88
  			drawing meet[frame%3]
  			baseX = 88
  			baseY = 0
  			drawing monster.eatingDots[frame%2]
  	frame++
  , 800
  
  # 一定時間が経ったら進化する
  setTimeout ->
  	monster = new Zurumon
  , 4950
  */


}).call(this);
